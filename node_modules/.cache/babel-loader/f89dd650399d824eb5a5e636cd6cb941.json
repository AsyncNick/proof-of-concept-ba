{"ast":null,"code":"import fs from 'fs'; //import exampleData from './exampleData';\n\nexport function Data(key, id, age, gender, race, living, income) {\n  return {\n    key: key,\n    id: id,\n    age: age,\n    gender: gender,\n    race: race,\n    living: living,\n    income: income\n  };\n} //\n\nexport var columns = [{\n  title: 'ID',\n  dataIndex: 'id',\n  key: 'id'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  key: 'gender'\n}, {\n  title: 'Race',\n  dataIndex: 'race',\n  key: 'race'\n}, {\n  title: 'Living Situation',\n  dataIndex: 'living',\n  key: 'living'\n}, {\n  title: 'Household Income',\n  dataIndex: 'income',\n  key: 'income'\n}];\nvar example = Data(1, 1, 20, 'm', 'white', 'single', 'income');\nvar empty = [];\n\nfor (var i = 1; i <= 100; i++) {\n  var ages = Math.floor(Math.random() * i) + 15;\n  var races = ['white', 'black', 'latino'];\n  var randomRaces = races[Math.floor(Math.random() >> 2)];\n  var randomIncomes = Math.floor(Math.random() + i);\n  var status = ['married', 'single'];\n  var randomStatus = status[Math.floor(Math.random() * 2)];\n  empty.push(Data(1, i, ages, 'm', randomRaces, randomStatus, randomIncomes));\n} //let example = JSON.parse(exampleData);\n\n\nexport var data = empty;","map":{"version":3,"sources":["/Users/nicky/Documents/GitHub/personal-site/src/lib/table_data.js"],"names":["fs","Data","key","id","age","gender","race","living","income","columns","title","dataIndex","example","empty","i","ages","Math","floor","random","races","randomRaces","randomIncomes","status","randomStatus","push","data"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf,C,CACA;;AAEA,OAAO,SAASC,IAAT,CAAeC,GAAf,EAAoBC,EAApB,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAC9D,SAAO;AACLN,IAAAA,GAAG,EAAEA,GADA;AAELC,IAAAA,EAAE,EAAEA,EAFC;AAGLC,IAAAA,GAAG,EAAEA,GAHA;AAILC,IAAAA,MAAM,EAAEA,MAJH;AAKLC,IAAAA,IAAI,EAAEA,IALD;AAMLC,IAAAA,MAAM,EAAEA,MANH;AAOLC,IAAAA,MAAM,EAAEA;AAPH,GAAP;AASH,C,CAED;;AACA,OAAO,IAAMC,OAAO,GAAG,CACrB;AAACC,EAAAA,KAAK,EAAE,IAAR;AAAaC,EAAAA,SAAS,EAAE,IAAxB;AAA8BT,EAAAA,GAAG,EAAE;AAAnC,CADqB,EAErB;AAACQ,EAAAA,KAAK,EAAE,KAAR;AAAcC,EAAAA,SAAS,EAAE,KAAzB;AAAgCT,EAAAA,GAAG,EAAE;AAArC,CAFqB,EAGrB;AAACQ,EAAAA,KAAK,EAAE,QAAR;AAAiBC,EAAAA,SAAS,EAAE,QAA5B;AAAqCT,EAAAA,GAAG,EAAE;AAA1C,CAHqB,EAIrB;AAACQ,EAAAA,KAAK,EAAE,MAAR;AAAeC,EAAAA,SAAS,EAAE,MAA1B;AAAiCT,EAAAA,GAAG,EAAE;AAAtC,CAJqB,EAKrB;AAACQ,EAAAA,KAAK,EAAE,kBAAR;AAA2BC,EAAAA,SAAS,EAAE,QAAtC;AAA+CT,EAAAA,GAAG,EAAE;AAApD,CALqB,EAMrB;AAACQ,EAAAA,KAAK,EAAE,kBAAR;AAA2BC,EAAAA,SAAS,EAAE,QAAtC;AAA+CT,EAAAA,GAAG,EAAE;AAApD,CANqB,CAAhB;AAQP,IAAIU,OAAO,GAAGX,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,GAAX,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,QAAnC,CAAlB;AACA,IAAIY,KAAK,GAAG,EAAZ;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,IAAgC,EAA3C;AACA,MAAIK,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CAAZ;AACA,MAAIC,WAAW,GAAGD,KAAK,CAACH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,CAA5B,CAAD,CAAvB;AACA,MAAIG,aAAa,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,CAApB;AACA,MAAIQ,MAAM,GAAG,CAAC,SAAD,EAAY,QAAZ,CAAb;AACA,MAAIC,YAAY,GAAGD,MAAM,CAACN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAzB;AACAL,EAAAA,KAAK,CAACW,IAAN,CAAWvB,IAAI,CAAC,CAAD,EAAIa,CAAJ,EAAOC,IAAP,EAAa,GAAb,EAAkBK,WAAlB,EAA+BG,YAA/B,EAA6CF,aAA7C,CAAf;AACD,C,CACD;;;AAEA,OAAO,IAAMI,IAAI,GAAGZ,KAAb","sourcesContent":["import fs from 'fs';\n//import exampleData from './exampleData';\n\nexport function Data (key, id, age, gender, race, living, income) {\n    return {\n      key: key,\n      id: id,\n      age: age,\n      gender: gender,\n      race: race,\n      living: living,\n      income: income\n    }\n}\n\n//\nexport const columns = [\n  {title: 'ID',dataIndex: 'id', key: 'id',},\n  {title: 'Age',dataIndex: 'age', key: 'age',},\n  {title: 'Gender',dataIndex: 'gender',key: 'gender',},\n  {title: 'Race',dataIndex: 'race',key: 'race',},\n  {title: 'Living Situation',dataIndex: 'living',key: 'living',},\n  {title: 'Household Income',dataIndex: 'income',key: 'income'}\n]\nlet example = Data(1, 1, 20, 'm', 'white', 'single', 'income')\nlet empty = []\nfor (let i = 1; i <= 100; i++) {\n  let ages = Math.floor(Math.random() * i) + 15\n  let races = ['white', 'black', 'latino']\n  let randomRaces = races[Math.floor(Math.random() >> 2)]\n  let randomIncomes = Math.floor(Math.random() + i)\n  let status = ['married', 'single']\n  let randomStatus = status[Math.floor(Math.random() * 2)]\n  empty.push(Data(1, i, ages, 'm', randomRaces, randomStatus, randomIncomes))\n}\n//let example = JSON.parse(exampleData);\n\nexport const data = empty;\n"]},"metadata":{},"sourceType":"module"}