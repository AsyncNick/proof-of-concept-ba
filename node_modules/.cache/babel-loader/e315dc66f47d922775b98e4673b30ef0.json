{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicky/Documents/GitHub/personal-site/src/partials/BitCoinTableWatcher.js\";\n// BitCoinTableWatcher.js\nimport React, { Component, Img } from 'react';\nimport App from '../App';\nimport { Menu, Icon, Layout, Breadcrumb, Table } from 'antd';\n\nvar BitcoinTableWatcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BitcoinTableWatcher, _Component);\n\n  function BitcoinTableWatcher(props) {\n    var _this;\n\n    _classCallCheck(this, BitcoinTableWatcher);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BitcoinTableWatcher).call(this, Component));\n    _this.state = {\n      data: []\n    };\n    _this.dataSource = props.dataSource;\n    _this.columns = props.columns;\n    return _this;\n  }\n\n  _createClass(BitcoinTableWatcher, [{\n    key: \"getBitcoinData\",\n    value: function () {\n      var _getBitcoinData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var bitcoin, bitcoinData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://api.bitcoincharts.com/v1/weighted_prices.json\");\n\n              case 2:\n                bitcoin = _context.sent;\n                bitcoinData = bitcoin.json();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getBitcoinData() {\n        return _getBitcoinData.apply(this, arguments);\n      }\n\n      return getBitcoinData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"test\");\n    }\n  }]);\n\n  return BitcoinTableWatcher;\n}(Component);\n\nexport default BitcoinTableWatcher;","map":{"version":3,"sources":["/Users/nicky/Documents/GitHub/personal-site/src/partials/BitCoinTableWatcher.js"],"names":["React","Component","Img","App","Menu","Icon","Layout","Breadcrumb","Table","BitcoinTableWatcher","props","state","data","dataSource","columns","fetch","bitcoin","bitcoinData","json"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,GAA3B,QAAsC,OAAtC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,UAA7B,EAAyCC,KAAzC,QAAsD,MAAtD;;IAEMC,mB;;;;;AACJ,+BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,6FAAMT,SAAN;AADkB,UAKpBU,KALoB,GAKZ;AACNC,MAAAA,IAAI,EAAE;AADA,KALY;AAElB,UAAKC,UAAL,GAAkBH,KAAK,CAACG,UAAxB;AACA,UAAKC,OAAL,GAAeJ,KAAK,CAACI,OAArB;AAHkB;AAInB;;;;;;;;;;;;;;uBAKqBC,KAAK,CAAC,sDAAD,C;;;AAArBC,gBAAAA,O;AACAC,gBAAAA,W,GAAcD,OAAO,CAACE,IAAR,E;;;;;;;;;;;;;;;;;;6BAGV;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;;;EAlB+BjB,S;;AAqBlC,eAAeQ,mBAAf","sourcesContent":["// BitCoinTableWatcher.js\nimport React, { Component, Img } from 'react';\nimport App from '../App'\nimport { Menu, Icon, Layout, Breadcrumb, Table } from 'antd';\n\nclass BitcoinTableWatcher extends Component {\n  constructor (props) {\n    super(Component)\n    this.dataSource = props.dataSource;\n    this.columns = props.columns;\n  }\n  state = {\n    data: []\n  }\n  async getBitcoinData () {\n    let bitcoin = await fetch(\"http://api.bitcoincharts.com/v1/weighted_prices.json\");\n    let bitcoinData = bitcoin.json()\n\n  }\n  render () {\n    return (\n      <h3>test</h3>\n    )\n  }\n}\n\nexport default BitcoinTableWatcher;\n"]},"metadata":{},"sourceType":"module"}