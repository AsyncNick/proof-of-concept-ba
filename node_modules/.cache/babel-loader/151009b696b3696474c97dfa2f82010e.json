{"ast":null,"code":"import _classCallCheck from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicky/Documents/GitHub/personal-site/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicky/Documents/GitHub/personal-site/src/partials/BitCoinTableWatcher.js\";\n// BitCoinTableWatcher.js\nimport React, { Component, Img } from 'react';\nimport App from '../App';\nimport { Menu, Icon, Layout, Breadcrumb, Table } from 'antd';\n\nvar BitcoinTableWatcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BitcoinTableWatcher, _Component);\n\n  function BitcoinTableWatcher() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BitcoinTableWatcher);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BitcoinTableWatcher)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(BitcoinTableWatcher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://api.bitcoincharts.com/v1/weighted_prices.json\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        return _this2.setState({\n          data: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.state.data)));\n    }\n  }]);\n\n  return BitcoinTableWatcher;\n}(Component);\n\nexport default BitcoinTableWatcher;","map":{"version":3,"sources":["/Users/nicky/Documents/GitHub/personal-site/src/partials/BitCoinTableWatcher.js"],"names":["React","Component","Img","App","Menu","Icon","Layout","Breadcrumb","Table","BitcoinTableWatcher","state","data","fetch","then","res","json","setState"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,GAA3B,QAAsC,OAAtC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,UAA7B,EAAyCC,KAAzC,QAAsD,MAAtD;;IAEMC,mB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAG;AADD,K;;;;;;wCAGa;AAAA;;AACnBC,MAAAA,KAAK,CAAC,sDAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAE,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEI;AAAR,SAAd,CAAJ;AAAA,OAFZ;AAGD;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWC,IAAhB,CADF,CADF,CADF;AAOD;;;;EAjB+BV,S;;AAoBlC,eAAeQ,mBAAf","sourcesContent":["// BitCoinTableWatcher.js\nimport React, { Component, Img } from 'react';\nimport App from '../App'\nimport { Menu, Icon, Layout, Breadcrumb, Table } from 'antd';\n\nclass BitcoinTableWatcher extends Component {\n  state = {\n    data : []\n  }\n  componentDidMount () {\n    fetch(\"http://api.bitcoincharts.com/v1/weighted_prices.json\")\n      .then(res => res.json())\n      .then(json => this.setState({ data: json }))\n  }\n  render () {\n    return (\n      <div>\n        <ul>\n          <li>{this.state.data}</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default BitcoinTableWatcher;\n"]},"metadata":{},"sourceType":"module"}