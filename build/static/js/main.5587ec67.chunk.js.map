{"version":3,"sources":["partials/sider.js","lib/table_data.js","partials/AccessKey.js","partials/BitCoinTableWatcher.js","partials/SpanContainer.js","App.js","serviceWorker.js","index.js"],"names":["Sider","Layout","Header","Content","Footer","SideNav","Menu","SubMenu","ItemGroup","state","collapsed","onCollapse","_this","setState","handleClick","e","console","log","react_default","a","createElement","style","overflow","height","position","left","breakpoint","collapsedWidth","onBreakpoint","broken","type","className","menu","theme","mode","defaultSelectedKeys","Item","key","icon","Component","Data","id","age","gender","race","living","income","columns","title","dataIndex","empty","i","ages","Math","floor","random","randomRaces","randomIncomes","randomStatus","push","data","AccessKey","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","input","value","alert","Route","path","component","partials_SpanContainer","_this2","onSubmit","ref","BitcoinTableWatcher","bitcoinData","show","fetch","then","res","json","table","dataSource","SpanContainer","SpanContainer_Content","margin","padding","background","textAlign","w_h","BitCoinTableWatcher","App","layout","sider","marginLeft","App_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5587ec67.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass SideNav extends Component {\n  state = { collapsed: false, }\n\n  onCollapse = (collapsed) => {\n    this.setState({ collapsed })\n  }\n  handleClick = (e) => {\n    console.log('click', e)\n  }\n  render () {\n    return (\n      <Sider style={{\n        overflow: 'auto', height: '100vh', position: 'fixed', left: 0,\n      }}\n      breakpoint=\"lg\"\n      collapsedWidth=\"0\"\n      onBreakpoint={(broken) => { console.log(broken); }}\n      onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n          <Menu.Item key=\"1\">\n            <Icon type=\"user\" />\n            <span className=\"nav-text\">Data</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default SideNav;\n/*\n<Menu.Item key=\"2\">\n  <Icon type=\"video-camera\" />\n  <span className=\"nav-text\">nav 2</span>\n</Menu.Item>\n<Menu.Item key=\"3\">\n  <Icon type=\"upload\" />\n  <span className=\"nav-text\">nav 3</span>\n</Menu.Item>\n<Menu.Item key=\"4\">\n  <Icon type=\"bar-chart\" />\n  <span className=\"nav-text\">nav 4</span>\n</Menu.Item>\n<Menu.Item key=\"5\">\n  <Icon type=\"cloud-o\" />\n  <span className=\"nav-text\">nav 5</span>\n</Menu.Item>\n<Menu.Item key=\"6\">\n  <Icon type=\"appstore-o\" />\n  <span className=\"nav-text\">nav 6</span>\n</Menu.Item>\n<Menu.Item key=\"7\">\n  <Icon type=\"team\" />\n  <span className=\"nav-text\">nav 7</span>\n</Menu.Item>\n<Menu.Item key=\"8\">\n  <Icon type=\"shop\" />\n  <span className=\"nav-text\">nav 8</span>\n</Menu.Item>\n*/\n","import fs from 'fs';\n//import exampleData from './exampleData';\n\nexport function Data (key, id, age, gender, race, living, income) {\n    return {\n      key: key,\n      id: id,\n      age: age,\n      gender: gender,\n      race: race,\n      living: living,\n      income: income\n    }\n}\n\n//\nexport const columns = [\n  {title: 'ID',dataIndex: 'id', key: 'id',},\n  {title: 'Age',dataIndex: 'age', key: 'age',},\n  {title: 'Gender',dataIndex: 'gender',key: 'gender',},\n  {title: 'Race',dataIndex: 'race',key: 'race',},\n  {title: 'Living Situation',dataIndex: 'living',key: 'living',},\n  {title: 'Household Income',dataIndex: 'income',key: 'income'}\n]\nlet example = Data(1, 1, 20, 'm', 'white', 'single', 'income')\nlet empty = []\nfor (let i = 1; i <= 10; i++) {\n  let races = ['white', 'black', 'latino']\n  let status = ['married', 'single']\n  let ages = Math.floor(Math.random() * i) + 15\n  let randomRaces = races[Math.floor(Math.random() >> 2)]\n  let randomIncomes = Math.floor(Math.random() + (i*7))+10000\n  let randomStatus = status[Math.floor(Math.random() * 2)]\n\n  empty.push(Data(1, i, ages, 'm', randomRaces, randomStatus, randomIncomes))\n}\n//let example = JSON.parse(exampleData);\n\nexport const data = empty;\n","// AccessKey.js\nimport React, { Component, Img } from 'react';\nimport App from '../App'\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport SideNav from './sider';\nimport SpanContainer from './SpanContainer';\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\nclass AccessKey extends Component {\n  constructor (props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.input = props.input;\n  }\n  handleSubmit (e) {\n    if (this.input.value === '1') {\n      alert('test')\n      return (\n        <Route path=\"/data\" component={<SpanContainer/>} />\n      )\n    }\n  }\n  render () {\n    return (\n      <div>\n      <form onSubmit={this.handleSubmit}>\n        <label> Enter Access Key\n          <input type=\"text\" ref={(input) => this.input = input}/>\n        </label>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default AccessKey;\n","// BitCoinTableWatcher.js\nimport React, { Component, Img } from 'react';\nimport App from '../App'\nimport { Menu, Icon, Layout, Breadcrumb, Table } from 'antd';\nimport {columns, data, Data} from '../lib/table_data';\nimport AccessKey, {props} from './AccessKey';\n\nclass BitcoinTableWatcher extends Component {\n  constructor () {\n    super(AccessKey);\n  }\n  state = {\n    data : [],\n    bitcoinData: `<ul>\n      {this.state.data.map(li => (\n        <li>{li.name}: {li.price_usd}</li>\n      ))}\n    </ul>`,\n    show: true\n  }\n  async componentDidMount () {\n    await fetch(\"https://api.coinmarketcap.com/v1/ticker/?limit=100\")\n      .then(res => res.json())\n      .then(json => this.setState({ data: json }))\n  }\n  render () {\n    if (this.state.show === true) {\n      return (\n        <div show={this.state.show}>\n          <Table breakpoint=\"lg\" columns={columns} dataSource={data}/>\n        </div>\n      )\n    }\n  }\n}\n\nexport default BitcoinTableWatcher;\n","// SpanContainer.js\nimport React, { Component, Img } from 'react';\nimport App from '../App'\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\nimport BitCoinTableWatcher, { state } from './BitCoinTableWatcher';\nimport AccessKey from \"./AccessKey\";\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\n//<AccessKey/>\n\nclass SpanContainer extends Component {\n  render () {\n    let w_h = `width: 1000, height: 1000,minHeight: 280, paddingRight: 50, paddingLeft: 50, paddingTop: 25`;\n    return (\n    <div>\n    <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n      <div style={{ padding: 24, background: '#fff', textAlign: 'center' }}>\n        <h1> Study Data </h1>\n\n        <div style={{w_h}}>\n          <BitCoinTableWatcher show={false}/>\n        </div>\n      </div>\n    </Content>\n    </div>\n    )\n  }\n}\n\nexport default SpanContainer;\n","// eslint-disable-next-line\nimport React, { Component, Img } from 'react';\n// eslint-disable-next-line\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\n// eslint-disable-next-line\nimport { Card, Badge, Row, Col,\n  Button, Menu, Icon, Layout, Avatar} from 'antd';\n\n// partials\nimport SideNav from './partials/sider';\n//import MainContainer from './partials/MainContainer';\nimport SpanContainer from './partials/SpanContainer';\nimport AccessKey from './partials/AccessKey';\n// css\nimport './App.css';\nimport './app.min.css';\nimport 'antd/dist/antd.css';\n// eslint-disable-next-line\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Layout>\n        <SideNav/>\n        <Layout style={{ marginLeft: 200 }}>\n          <SpanContainer />\n          <Footer style={{ textAlign: 'center' }}>\n            Designed by Nicky Laczko\n          </Footer>\n        </Layout>\n      </Layout>\n      </div>\n    )\n  }\n}\n/*<Layout>\n<SideNav/>\n<Layout style={{ marginLeft: 200 }}>\n  <SpanContainer show={false}/>\n  <Footer style={{ textAlign: 'center' }}>\n    Designed by Nicky Laczko\n  </Footer>\n</Layout>\n</Layout>*/\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}